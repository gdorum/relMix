mutPar <- get("mutPar",envir=mmTK)
r1 <- mutPar$fMutRate
r2 <- mutPar$mMutRate
range1 <- mutPar$mutRange
mutModel <- get("Mut",envir=mmTK)
optPar <- get('optPar',mmTK)
theta <- optPar$theta
#Profiles
if(!exists('mixture',envir=mmTK)){ f_errorWindow("Mixture not imported"); stop()}
if(!exists('reference',envir=mmTK)){ f_errorWindow("Reference profiles not imported"); stop()}
if(!exists('frequencies',envir=mmTK)){ f_errorWindow("Missing allele frequencies"); stop()}
if(!exists("ped1",envir=mmTK)){ f_errorWindow("Missing pedigree information"); stop()}
if(!exists("ped2",envir=mmTK)){ f_errorWindow("Missing pedigree information"); stop()}
if(!exists("idxC1",envir=mmTK)){ f_errorWindow("Contributors not specified"); stop()}
E <- get("mixture",envir=mmTK) #get object
G <- get("reference",envir=mmTK) #get object
#Remove AMEL marker? Or not allow for it?
R <- f_mixture(E)
knownGenos <- f_genotypes(G)
#Frequencies
db2 <- get("dbF",envir=mmTK)
alleleNames <- as.character(db2[,2])
#Check if there are non-numeric allele names and stepwise mutation model
#If so, give a warning
isNumeric <- suppressWarnings(as.numeric(alleleNames[alleleNames!="Silent"]))
if(any(is.na(isNumeric)) && mutModel=='Stepwise'){
f_errorWindow(format("Stepwise mutation model requires numeric allele names.
Change allele names or choose a different mutation model.",justify="centre"))
}
allelesAll <- split(db2$Allele,db2$Marker)
afreqAll <- split(db2$Frequency,db2$Marker)
#Pedigree data
ped1 <- get("ped1",envir=mmTK)
ped2 <- get("ped2",envir=mmTK)
persons1 <- get("persons_ped1",envir=mmTK)
persons2 <- get("persons_ped2",envir=mmTK)
pedigrees <- list(ped1,ped2)
#idxC <- get("idxC",envir=mmTK) #Individuals who are contributors
idxC1 <- get("idxC1",envir=mmTK) #Contributors under H1
idxC2 <- get("idxC2",envir=mmTK) #Contributors under H2
idxK <- unique(G[,1]) #Individuals with known genotypes
idxC <- union(idxC1,idxC2)
idxU <- idxC[!idxC%in%idxK] #Contributors with uknown genotypes. Assuming that all individuals are represented in both pedigrees!
pedigrees
allelesAll <- split(db2$Allele,db2$Marker)
afreqAll <- split(db2$Frequency,db2$Marker)
#Pedigree data
ped1 <- get("ped1",envir=mmTK)
ped2 <- get("ped2",envir=mmTK)
persons1 <- get("persons_ped1",envir=mmTK)
persons2 <- get("persons_ped2",envir=mmTK)
pedigrees <- list(ped1,ped2)
#idxC <- get("idxC",envir=mmTK) #Individuals who are contributors
idxC1 <- get("idxC1",envir=mmTK) #Contributors under H1
idxC2 <- get("idxC2",envir=mmTK) #Contributors under H2
idxK <- unique(G[,1]) #Individuals with known genotypes
idxC <- union(idxC1,idxC2)
idxU <- idxC[!idxC%in%idxK] #Contributors with uknown genotypes. Assuming that all individuals are represented in both pedigrees!
pedigrees
svalue(h$obj)
relMixGUI()
?relMix
librar/relMix
library(relMix)
relMixGUI()
source('C:/Users/dogu/Desktop/relMix_GHEP2018.R')
d
di
genotypes <- data.frame(locus1.1=c("15","15","15"), locus1.2=c("15","17","15"), locus2.1=c("7","6","7"), locus2.2=c("7","7","7"), locus3.1=c("29","31","29"), locus3.2=c("31","31","31"), locus4.1=c("11","11","11"), locus4.2=c("17","17","17"), locus5.1=c(NA,NA,NA), locus5.2=c(NA,NA,NA), locus6.1=c("12","12","12"), locus6.2=c("12","12","12"), locus7.1=c("8","8","8"), locus7.2=c("9","9","9"), locus8.1=c("9","11","9"), locus8.2=c("9","12","11"), locus9.1=c("9","10","9"), locus9.2=c("12","10","10"), locus10.1=c("13","12","12"), locus10.2=c("13","13","13"), locus11.1=c(NA,NA,NA), locus11.2=c(NA,NA,NA), locus12.1=c("17","16","16"), locus12.2=c("18","16","17"), locus13.1=c("13","13","13"), locus13.2=c("13","13","13"), locus14.1=c("9","10","9"), locus14.2=c("11","12","11"), locus15.1=c("20","20","20"), locus15.2=c("22","22","22"), locus16.1=c("12","13","12"), locus16.2=c("15.2","14","13"), locus17.1=c("18","17","17"), locus17.2=c("20","22","18"), locus18.1=c(NA,NA,NA), locus18.2=c(NA,NA,NA), locus19.1=c(NA,NA,NA), locus19.2=c(NA,NA,NA), locus20.1=c(NA,NA,NA), locus20.2=c(NA,NA,NA), locus21.1=c(NA,NA,NA), locus21.2=c(NA,NA,NA), locus22.1=c(NA,NA,NA), locus22.2=c(NA,NA,NA), locus23.1=c(NA,NA,NA), locus23.2=c(NA,NA,NA), locus24.1=c(NA,NA,NA), locus24.2=c(NA,NA,NA), locus25.1=c(NA,NA,NA), locus25.2=c(NA,NA,NA), locus26.1=c(NA,NA,NA), locus26.2=c(NA,NA,NA), locus27.1=c(NA,NA,NA), locus27.2=c(NA,NA,NA), locus28.1=c(NA,NA,NA), locus28.2=c(NA,NA,NA), locus29.1=c(NA,NA,NA), locus29.2=c(NA,NA,NA), locus30.1=c(NA,NA,NA), locus30.2=c(NA,NA,NA), locus31.1=c(NA,NA,NA), locus31.2=c(NA,NA,NA), locus32.1=c(NA,NA,NA), locus32.2=c(NA,NA,NA))
genotypes
locus1 <- FamiliasLocus(frequencies=c(0.0010000000,0.0030000000,0.0060000000,0.0850000000,0.3260000000,0.0010000000,0.2960000000,0.1870000000,0.0880000000,0.0050000000,0.0020000000), name="D3S1358", allelenames=c("9","12","13","14","15","15.2","16","17","18","19","20"), femaleMutationRate = 0.00015, maleMutationRate = 0.0013,femaleMutationRange = 0.1, maleMutationRange = 0.1,femaleMutationRate2 = 1e-006, maleMutationRate2 = 1e-006, maleMutationModel="Stepwise", femaleMutationModel="Stepwise")
locus2 <- FamiliasLocus(frequencies=c(0.0019980020,0.2257742258,0.3156843157,0.1568431568,0.1488511489,0.1398601399,0.0109890110), name="TH01", allelenames=c("5","6","7","8","9","9.3","10"), femaleMutationRate = 9e-005, maleMutationRate = 9e-005,femaleMutationRange = 0.1, maleMutationRange = 0.1,femaleMutationRate2 = 1e-006, maleMutationRate2 = 1e-006, maleMutationModel="Stepwise", femaleMutationModel="Stepwise")
locus3 <- FamiliasLocus(frequencies=c(0.0010000000,0.0310000000,0.2050000000,0.1930000000,0.0010000000,0.2020000000,0.0330000000,0.0660000000,0.0730000000,0.0250000000,0.0010000000,0.0880000000,0.0030000000,0.0030000000,0.0420000000,0.0060000000,0.0040000000,0.0190000000,0.0030000000,0.0010000000), name="D21S11", allelenames=c("24.3","27","28","29","29.2","30","30.2","31","31.2","32","32.1","32.2","33","33.1","33.2","34","34.2","35","36","37"), femaleMutationRate = 0.0015, maleMutationRate = 0.0011,femaleMutationRange = 0.1, maleMutationRange = 0.1,femaleMutationRate2 = 1e-006, maleMutationRate2 = 1e-006, maleMutationModel="Stepwise", femaleMutationModel="Stepwise")
locus4 <- FamiliasLocus(frequencies=c(0.0060120240,0.0090180361,0.1082164329,0.0931863727,0.0040080160,0.1352705411,0.0030060120,0.1503006012,0.0010020040,0.1312625251,0.1442885772,0.0841683366,0.0671342685,0.0360721443,0.0190380761,0.0010020040,0.0060120240,0.0010020040), name="D18S51", allelenames=c("10","11","12","13","13.2","14","14.2","15","15.2","16","17","18","19","20","21","21.2","22","23"), femaleMutationRate = 0.0006, maleMutationRate = 0.0022,femaleMutationRange = 0.1, maleMutationRange = 0.1,femaleMutationRate2 = 1e-006, maleMutationRate2 = 1e-006, maleMutationModel="Stepwise", femaleMutationModel="Stepwise")
locus5 <- FamiliasLocus(frequencies=c(0.0610610611,0.0800800801,0.0890890891,0.0180180180,0.0750750751,0.0920920921,0.1511511512,0.0950950951,0.0780780781,0.0740740741,0.0590590591,0.0550550551,0.0240240240,0.0150150150,0.0080080080,0.0180180180,0.0050050050,0.0020020020), name="Penta_E", allelenames=c("5","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23"), femaleMutationRate = 0.00065, maleMutationRate = 0.00135,femaleMutationRange = 0.1, maleMutationRange = 0.1,femaleMutationRate2 = 1e-006, maleMutationRate2 = 1e-006, maleMutationModel="Stepwise", femaleMutationModel="Stepwise")
locus6 <- FamiliasLocus(frequencies=c(0.0309690310,0.0269730270,0.0359640360,0.0619380619,0.2957042957,0.3166833167,0.2097902098,0.0159840160,0.0009990010,0.0049950050), name="D5S818", allelenames=c("7","8","9","10","11","12","13","14","15","16"), femaleMutationRate = 0.00025, maleMutationRate = 0.0012,femaleMutationRange = 0.1, maleMutationRange = 0.1,femaleMutationRate2 = 1e-006, maleMutationRate2 = 1e-006, maleMutationModel="Stepwise", femaleMutationModel="Stepwise")
locus7 <- FamiliasLocus(frequencies=c(0.0559440559,0.0889110889,0.0639360639,0.2597402597,0.3446553447,0.1128871129,0.0709290709,0.0019980020,0.0009990010), name="D13S317", allelenames=c("8","9","10","11","12","13","14","15","16"), femaleMutationRate = 0.0004, maleMutationRate = 0.0014,femaleMutationRange = 0.1, maleMutationRange = 0.1,femaleMutationRate2 = 1e-006, maleMutationRate2 = 1e-006, maleMutationModel="Stepwise", femaleMutationModel="Stepwise")
locus8 <- FamiliasLocus(frequencies=c(0.0009980040,0.0089820359,0.1676646707,0.0878243513,0.2984031936,0.0009980040,0.2445109780,0.1497005988,0.0319361277,0.0009980040,0.0069860279,0.0009980040), name="D7S820", allelenames=c("6.3","7","8","9","10","10.3","11","12","13","13.1","14","15"), femaleMutationRate = 0.00013, maleMutationRate = 0.0012,femaleMutationRange = 0.1, maleMutationRange = 0.1,femaleMutationRate2 = 1e-006, maleMutationRate2 = 1e-006, maleMutationModel="Stepwise", femaleMutationModel="Stepwise")
locus9 <- FamiliasLocus(frequencies=c(0.0299700300,0.1858141858,0.1078921079,0.2707292707,0.2367632368,0.1438561439,0.0219780220,0.0029970030), name="D16S539", allelenames=c("8","9","10","11","12","13","14","15"), femaleMutationRate = 0.0003, maleMutationRate = 0.0011,femaleMutationRange = 0.1, maleMutationRange = 0.1,femaleMutationRate2 = 1e-006, maleMutationRate2 = 1e-006, maleMutationModel="Stepwise", femaleMutationModel="Stepwise")
locus10 <- FamiliasLocus(frequencies=c(0.0379620380,0.0319680320,0.0369630370,0.2387612388,0.2797202797,0.3136863137,0.0519480519,0.0089910090), name="CSF1PO", allelenames=c("7","8","9","10","11","12","13","14"), femaleMutationRate = 0.0003, maleMutationRate = 0.0015,femaleMutationRange = 0.1, maleMutationRange = 0.1,femaleMutationRate2 = 1e-006, maleMutationRate2 = 1e-006, maleMutationModel="Stepwise", femaleMutationModel="Stepwise")
locus11 <- FamiliasLocus(frequencies=c(0.0799200799,0.0029970030,0.0179820180,0.0009990010,0.0179820180,0.0449550450,0.1758241758,0.1518481518,0.1388611389,0.1468531469,0.1458541459,0.0589410589,0.0149850150,0.0019980020), name="Penta_D", allelenames=c("2.2","3.2","5","6","7","8","9","10","11","12","13","14","15","16"), femaleMutationRate = 0.0006, maleMutationRate = 0.0009,femaleMutationRange = 0.1, maleMutationRange = 0.1,femaleMutationRate2 = 1e-006, maleMutationRate2 = 1e-006, maleMutationModel="Stepwise", femaleMutationModel="Stepwise")
locus12 <- FamiliasLocus(frequencies=c(0.0040000000,0.0080000000,0.0610000000,0.1500000000,0.3160000000,0.2230000000,0.1470000000,0.0710000000,0.0190000000,0.0010000000), name="vWA", allelenames=c("11","13","14","15","16","17","18","19","20","21"), femaleMutationRate = 0.0003, maleMutationRate = 0.0017,femaleMutationRange = 0.1, maleMutationRange = 0.1,femaleMutationRate2 = 1e-006, maleMutationRate2 = 1e-006, maleMutationModel="Stepwise", femaleMutationModel="Stepwise")
locus13 <- FamiliasLocus(frequencies=c(0.0040000000,0.0050000000,0.0630000000,0.0660000000,0.1140000000,0.2730000000,0.2850000000,0.1430000000,0.0400000000,0.0070000000), name="D8S1179", allelenames=c("8","9","10","11","12","13","14","15","16","17"), femaleMutationRate = 0.0002, maleMutationRate = 0.0016,femaleMutationRange = 0.1, maleMutationRange = 0.1,femaleMutationRate2 = 1e-006, maleMutationRate2 = 1e-006, maleMutationModel="Stepwise", femaleMutationModel="Stepwise")
locus14 <- FamiliasLocus(frequencies=c(0.0399600400,0.0099900100,0.4085914086,0.1258741259,0.0729270729,0.2727272727,0.0669330669,0.0029970030), name="TPOX", allelenames=c("6","7","8","9","10","11","12","13"), femaleMutationRate = 4e-005, maleMutationRate = 0.00012,femaleMutationRange = 0.1, maleMutationRange = 0.1,femaleMutationRate2 = 1e-006, maleMutationRate2 = 1e-006, maleMutationModel="Stepwise", femaleMutationModel="Stepwise")
locus15 <- FamiliasLocus(frequencies=c(0.0069930070,0.0069930070,0.0749250749,0.0009990010,0.0789210789,0.0009990010,0.1358641359,0.0009990010,0.1708291708,0.0019980020,0.1358641359,0.1648351648,0.1228771229,0.0509490509,0.0219780220,0.0109890110,0.0059940060,0.0019980020,0.0009990010,0.0029970030,0.0009990010), name="FGA", allelenames=c("18","18.2","19","19.2","20","20.3","21","21.2","22","22.2","23","24","25","26","27","28","29","30","33","45.2","46.2"), femaleMutationRate = 0.0005, maleMutationRate = 0.0032,femaleMutationRange = 0.1, maleMutationRange = 0.1,femaleMutationRate2 = 1e-006, maleMutationRate2 = 1e-006, maleMutationModel="Stepwise", femaleMutationModel="Stepwise")
locus16 <- FamiliasLocus(frequencies=c(0.0059820538,0.0358923230,0.0029910269,0.1036889332,0.0229312064,0.2542372881,0.0817547358,0.2402791625,0.0458624128,0.0947158525,0.0707876371,0.0159521436,0.0139581256,0.0019940179,0.0049850449,0.0039880359), name="D19S433", allelenames=c("10","11","11.2","12","12.2","13","13.2","14","14.2","15","15.2","16","16.2","17","17.2","18"), femaleMutationRate = 0.0005, maleMutationRate = 0.00075,femaleMutationRange = 0.1, maleMutationRange = 0.1,femaleMutationRate2 = 1e-006, maleMutationRate2 = 1e-006, maleMutationModel="Stepwise", femaleMutationModel="Stepwise")
locus17 <- FamiliasLocus(frequencies=c(0.0010000000,0.0030000000,0.0540000000,0.1710000000,0.0610000000,0.1720000000,0.0930000000,0.0770000000,0.0850000000,0.1180000000,0.0800000000,0.0630000000,0.0180000000,0.0040000000), name="D2S1338", allelenames=c("13","15","16","17","18","19","20","21","22","23","24","25","26","27"), femaleMutationRate = 0.00021, maleMutationRate = 0.001,femaleMutationRange = 0.1, maleMutationRange = 0.1,femaleMutationRate2 = 1e-006, maleMutationRate2 = 1e-006, maleMutationModel="Stepwise", femaleMutationModel="Stepwise")
locus18 <- FamiliasLocus(frequencies=c(0.0049950050,0.0019980020,0.0049950050,0.0159840160,0.0789210789,0.2307692308,0.3176823177,0.2097902098,0.1088911089,0.0239760240,0.0019980020), name="D10S1248", allelenames=c("8","9","10","11","12","13","14","15","16","17","18"), femaleMutationRate = 0.001, maleMutationRate = 0.002,femaleMutationRange = 0.1, maleMutationRange = 0.1,femaleMutationRate2 = 1e-006, maleMutationRate2 = 1e-006, maleMutationModel="Stepwise", femaleMutationModel="Stepwise")
locus19 <- FamiliasLocus(frequencies=c(0.0030030030,0.0590590591,0.0890890891,0.0900900901,0.1751751752,0.0160160160,0.1411411411,0.0330330330,0.1341341341,0.0590590591,0.0450450451,0.0010010010,0.1051051051,0.0060060060,0.0360360360,0.0010010010,0.0060060060), name="D1S1656", allelenames=c("10","11","12","13","14","14.3","15","15.3","16","16.3","17","17.1","17.3","18","18.3","19","19.3"), femaleMutationRate = 0.001, maleMutationRate = 0.002,femaleMutationRange = 0.1, maleMutationRange = 0.1,femaleMutationRate2 = 1e-006, maleMutationRate2 = 1e-006, maleMutationModel="Stepwise", femaleMutationModel="Stepwise")
locus20 <- FamiliasLocus(frequencies=c(0.0010000000,0.0380000000,0.1030000000,0.0300000000,0.0030000000,0.0630000000,0.3490000000,0.2660000000,0.1340000000,0.0120000000,0.0010000000), name="D22S1045", allelenames=c("8","10","11","12","13","14","15","16","17","18","19"), femaleMutationRate = 0.001, maleMutationRate = 0.002,femaleMutationRange = 0.1, maleMutationRange = 0.1,femaleMutationRate2 = 1e-006, maleMutationRate2 = 1e-006, maleMutationModel="Stepwise", femaleMutationModel="Stepwise")
locus21 <- FamiliasLocus(frequencies=c(0.0049900200,0.2285429142,0.3193612774,0.0449101796,0.1027944112,0.0009980040,0.0429141717,0.0049900200,0.2225548902,0.0009980040,0.0239520958,0.0029940120), name="D2S441", allelenames=c("9","10","11","11.3","12","12.3","13","13.3","14","14.3","15","16"), femaleMutationRate = 0.001, maleMutationRate = 0.002,femaleMutationRange = 0.1, maleMutationRange = 0.1,femaleMutationRate2 = 1e-006, maleMutationRate2 = 1e-006, maleMutationModel="Stepwise", femaleMutationModel="Stepwise")
locus22 <- FamiliasLocus(frequencies=c(0.0010020040,0.0711422846,0.0390781563,0.1032064128,0.0010020040,0.0060120240,0.2164328657,0.0010020040,0.0120240481,0.1663326653,0.0020040080,0.0070140281,0.1372745491,0.0871743487,0.0721442886,0.0561122245,0.0130260521,0.0050100200,0.0030060120), name="D12S391", allelenames=c("13","15","16","17","17.1","17.3","18","18.1","18.3","19","19.1","19.3","20","21","22","23","24","25","26"), femaleMutationRate = 0.001, maleMutationRate = 0.002,femaleMutationRange = 0.1, maleMutationRange = 0.1,femaleMutationRate2 = 1e-006, maleMutationRate2 = 1e-006, maleMutationModel="Stepwise", femaleMutationModel="Stepwise")
locus23 <- FamiliasLocus(frequencies=c(0.0010010010,0.0010010010,0.0010010010,0.0010010010,0.0010010010,0.0010010010,0.0050050050,0.0050050050,0.0020020020,0.0360360360,0.0050050050,0.0360360360,0.0020020020,0.0810810811,0.0030030030,0.0010010010,0.0840840841,0.0950950951,0.1131131131,0.0010010010,0.0590590591,0.0020020020,0.0310310310,0.0060060060,0.0060060060,0.0200200200,0.0020020020,0.0190190190,0.0010010010,0.0260260260,0.0050050050,0.0400400400,0.0010010010,0.0660660661,0.0020020020,0.0700700701,0.0560560561,0.0040040040,0.0470470470,0.0010010010,0.0290290290,0.0210210210,0.0060060060,0.0010010010,0.0010010010,0.0020020020), name="SE33", allelenames=c("5","7","9","10","11","11.2","12","13","13.2","14","14.2","15","15.2","16","16.2","16.3","17","18","19","19.2","20","20.2","21","21.2","22","22.2","23","23.2","24","24.2","25","25.2","26","26.2","27","27.2","28.2","29","29.2","30","30.2","31.2","32.2","33","33.2","34"), femaleMutationRate = 0.003, maleMutationRate = 0.0064,femaleMutationRange = 0.1, maleMutationRange = 0.1,femaleMutationRate2 = 1e-006, maleMutationRate2 = 1e-006, maleMutationModel="Stepwise", femaleMutationModel="Stepwise")
locus24 <- FamiliasLocus(frequencies=c(0.0230460922,0.0701402806,0.2735470942,0.3056112224,0.2424849699,0.0310621243,0.0310621243,0.0230460922), name="D7S1517", allelenames=c("19","20","21","22","23","24","25","26"), femaleMutationRate = 0.001, maleMutationRate = 0.002,femaleMutationRange = 0.1, maleMutationRange = 0.1,femaleMutationRate2 = 1e-006, maleMutationRate2 = 1e-006, maleMutationModel="Stepwise", femaleMutationModel="Stepwise")
locus25 <- FamiliasLocus(frequencies=c(0.0630000000,0.1950000000,0.1950000000,0.2970000000,0.1950000000,0.0470000000,0.0080000000), name="D3S1744", allelenames=c("14","15","16","17","18","19","20"), femaleMutationRate = 0.001, maleMutationRate = 0.002,femaleMutationRange = 0.1, maleMutationRange = 0.1,femaleMutationRate2 = 1e-006, maleMutationRate2 = 1e-006, maleMutationModel="Stepwise", femaleMutationModel="Stepwise")
locus26 <- FamiliasLocus(frequencies=c(0.2732732733,0.4614614615,0.1411411411,0.0700700701,0.0230230230,0.0310310310), name="D2S1360", allelenames=c("21","22","23","24","25","26"), femaleMutationRate = 0.001, maleMutationRate = 0.002,femaleMutationRange = 0.1, maleMutationRange = 0.1,femaleMutationRate2 = 1e-006, maleMutationRate2 = 1e-006, maleMutationModel="Stepwise", femaleMutationModel="Stepwise")
locus27 <- FamiliasLocus(frequencies=c(0.0309690310,0.3586413586,0.1408591409,0.1798201798,0.1408591409,0.1408591409,0.0079920080), name="D6S474", allelenames=c("12","13","14","15","16","17","18"), femaleMutationRate = 0.001, maleMutationRate = 0.002,femaleMutationRange = 0.1, maleMutationRange = 0.1,femaleMutationRate2 = 1e-006, maleMutationRate2 = 1e-006, maleMutationModel="Stepwise", femaleMutationModel="Stepwise")
locus28 <- FamiliasLocus(frequencies=c(0.1718281718,0.0079920080,0.1798201798,0.3046953047,0.0779220779,0.2417582418,0.0159840160), name="D4S2366", allelenames=c("9","10","11","12","13","14","15"), femaleMutationRate = 0.001, maleMutationRate = 0.002,femaleMutationRange = 0.1, maleMutationRange = 0.1,femaleMutationRate2 = 1e-006, maleMutationRate2 = 1e-006, maleMutationModel="Stepwise", femaleMutationModel="Stepwise")
locus29 <- FamiliasLocus(frequencies=c(0.0628742515,0.0938123752,0.1407185629,0.2025948104,0.1796407186,0.1087824351,0.1407185629,0.0548902196,0.0079840319,0.0079840319), name="D8S1132", allelenames=c("16","17","18","19","20","21","22","23","24","25"), femaleMutationRate = 0.001, maleMutationRate = 0.002,femaleMutationRange = 0.1, maleMutationRange = 0.1,femaleMutationRate2 = 1e-006, maleMutationRate2 = 1e-006, maleMutationModel="Stepwise", femaleMutationModel="Stepwise")
locus30 <- FamiliasLocus(frequencies=c(0.1170000000,0.3130000000,0.1560000000,0.0310000000,0.0230000000,0.3440000000,0.0160000000), name="D5S2500", allelenames=c("10","11","12","13","14","15","16"), femaleMutationRate = 0.001, maleMutationRate = 0.002,femaleMutationRange = 0.1, maleMutationRange = 0.1,femaleMutationRate2 = 1e-006, maleMutationRate2 = 1e-006, maleMutationModel="Stepwise", femaleMutationModel="Stepwise")
locus31 <- FamiliasLocus(frequencies=c(0.0230000000,0.0080000000,0.0080000000,0.0160000000,0.0080000000,0.0390000000,0.3590000000,0.3590000000,0.0700000000,0.0230000000,0.0230000000,0.0080000000,0.0160000000,0.0080000000,0.0160000000,0.0160000000), name="D21S2055", allelenames=c("16.1","20.1","21","22","23","24","25","26","27","28","30","31","32","33","35","37"), femaleMutationRate = 0.001, maleMutationRate = 0.002,femaleMutationRange = 0.1, maleMutationRange = 0.1,femaleMutationRate2 = 1e-006, maleMutationRate2 = 1e-006, maleMutationModel="Stepwise", femaleMutationModel="Stepwise")
locus32 <- FamiliasLocus(frequencies=c(0.0230000000,0.0700000000,0.0080000000,0.1020000000,0.2420000000,0.1250000000,0.2110000000,0.1090000000,0.0630000000,0.0310000000,0.0080000000,0.0080000000), name="D10S2325", allelenames=c("6","7","8","9","10","11","12","13","14","15","16","17"), femaleMutationRate = 0.001, maleMutationRate = 0.002,femaleMutationRange = 0.1, maleMutationRange = 0.1,femaleMutationRate2 = 1e-006, maleMutationRate2 = 1e-006, maleMutationModel="Stepwise", femaleMutationModel="Stepwise")
loci <- list(locus1,locus2,locus3,locus4,locus5,locus6,locus7,locus8,locus9,locus10,locus11,locus12,locus13,locus14,locus15,locus16,locus17,locus18,locus19,locus20,locus21,locus22,locus23,locus24,locus25,locus26,locus27,locus28,locus29,locus30,locus31,locus32)
loci
locus1
library(relMix)
vignette(relMix)
c(0.3,0.4,0.5)
a<-c(0.3,0.4,0.5)
sum(s)
sum(a)
a/1.2
sum(a/1.2)
library(relMix)
source('C:/Users/dogu/switchdrive/R project/relMix/relMix/R/relMixGUI.R')
library(gWidgets)
library(gWidgetstcltk)
source('C:/Users/dogu/switchdrive/R project/relMix/relMix/R/relMixGUI.R')
mutPar <- get("mutPar",envir=mmTK)
r1 <- mutPar$fMutRate
r2 <- mutPar$mMutRate
range1 <- mutPar$mutRange
mutModel <- get("Mut",envir=mmTK)
optPar <- get('optPar',mmTK)
theta <- optPar$theta
#Profiles
if(!exists('mixture',envir=mmTK)){ f_errorWindow("Mixture not imported"); stop()}
if(!exists('reference',envir=mmTK)){ f_errorWindow("Reference profiles not imported"); stop()}
if(!exists('frequencies',envir=mmTK)){ f_errorWindow("Missing allele frequencies"); stop()}
if(!exists("ped1",envir=mmTK)){ f_errorWindow("Missing pedigree information"); stop()}
if(!exists("ped2",envir=mmTK)){ f_errorWindow("Missing pedigree information"); stop()}
if(!exists("idxC1",envir=mmTK)){ f_errorWindow("Contributors not specified"); stop()}
E <- get("mixture",envir=mmTK) #get object
G <- get("reference",envir=mmTK) #get object
#Remove AMEL marker? Or not allow for it?
R <- f_mixture(E)
knownGenos <- f_genotypes(G)
#Frequencies
db2 <- get("dbF",envir=mmTK)
alleleNames <- as.character(db2[,2])
#Check if there are non-numeric allele names and stepwise mutation model
#If so, give a warning
isNumeric <- suppressWarnings(as.numeric(alleleNames[alleleNames!="Silent"]))
if(any(is.na(isNumeric)) && mutModel=='Stepwise'){
f_errorWindow(format("Stepwise mutation model requires numeric allele names.
Change allele names or choose a different mutation model.",justify="centre"))
}
# db2 <- numeric()
# for(i in 1:ncol(freqs)){
#   ix <- which(!is.na(freqs[,i]))
#   a <- alleleNames[ix]
#   f <- freqs[ix,i]
#   Marker <- rep(markerNames[i],length(ix))
#   db2New <- data.frame(Marker,a,f)
#   colnames(db2New) <- c("Marker","Allele","Frequency")
#   db2 <- rbind(db2,db2New)
# }
#Make lists of alleles and frequencies per marker
allelesAll <- split(db2$Allele,db2$Marker)
afreqAll <- split(db2$Frequency,db2$Marker)
ped1 <- get("ped1",envir=mmTK)
ped2 <- get("ped2",envir=mmTK)
persons1 <- get("persons_ped1",envir=mmTK)
persons2 <- get("persons_ped2",envir=mmTK)
pedigrees <- list(ped1,ped2)
#idxC <- get("idxC",envir=mmTK) #Individuals who are contributors
idxC1 <- get("idxC1",envir=mmTK) #Contributors under H1
idxC2 <- get("idxC2",envir=mmTK) #Contributors under H2
idxK <- unique(G[,1]) #Individuals with known genotypes
idxC <- union(idxC1,idxC2)
idxU <- idxC[!idxC%in%idxK] #Contributors with uknown genotypes. Assuming that all individuals are represented in both pedigrees!
if(any(!unique(G$SampleName)%in%persons1)) { f_errorWindow("Individuals in reference file not found in pedigree"); stop() }
#Dropout/drop-in
#Set default dropout 0 for all contributors if none is set
# if(!exists('dropliste',envir=mmTK)){
#   dDef <- get('drop',envir=mmTK)
#   D <- rep(list(dDef$d),length(idxC))
#   names(D) <- idxC
#   di <- dDef$di
# } else{
drop <- get('dropliste',mmTK)
if(!all(idxC%in%names(drop))){ f_errorWindow("Specify dropout and drop-in"); stop()
} else {
D <- drop[idxC]
di <- drop[["dropin"]]
}
markers <- names(R)
LRmarker <- numeric(length(markers))
lik1 <- lik2 <- numeric(length(markers))
i<-1
ped1
ped2
idxC1
idxC2
#Create locus object for each marker
alleles <- as.character(allelesAll[[which(names(allelesAll)==markers[i])]])
afreq <- afreqAll[[which(names(afreqAll)==markers[i])]]
#Set MutationRate2 to a very small number to avoid probability 0 of mutation to and from microinvariants
#This is same as is done in Familias (MutationRate2 will be ignored unless mutation model is stepwise)
locus <- FamiliasLocus(frequencies=afreq,name=markers[i],
allelenames=alleles, MutationModel=mutModel, femaleMutationRate=r1,
maleMutationRate=r2, MutationRange=range1, MutationRate2 = 1e-06)
#If there is a silent allele we need to modify the mutation matrix.
#Silent allele must be given as 's' (not 'silent' as in Familias)
#That way Familias will treat it like a regular allele,
#while relMix will treat is specially
if('Silent'%in%alleles){
newAlleles <- c(alleles[-length(alleles)],'s')
mm <- locus$femaleMutationMatrix #Assuming same mutation matrix for male and female
colnames(mm) <- rownames(mm) <- newAlleles
locus <- FamiliasLocus(frequencies=afreq,name=markers[i],
allelenames= newAlleles, MutationModel='Custom', MutationMatrix=mm)
}
datamatrix <- createDatamatrix(locus,knownGenos[[which(names(knownGenos)==markers[i])]],idsU=idxU)
names(pedigrees) <- c("H1","H2")
if(identical(idxC1,idxC2)){
res <- relMix(pedigrees, locus, R=R[[i]], datamatrix, ids=idxC, D=lapply(D[idxC],function(x) c(x,x^2)),di=di, kinship=theta)
lik1[i] <- res$H1
lik2[i] <- res$H2
} else {
#relMix must be run twice with different contributors specified
#Since we assume that all individuals are represented in all pedigrees, we have the same datamatrix under both hypotheses
res1 <- relMix(pedigrees$H1, locus, R=R[[i]], datamatrix, ids=idxC1, D=lapply(D[idxC1],function(x) c(x,x^2)),di=di, kinship=theta)
res2 <- relMix(pedigrees$H2, locus, R=R[[i]], datamatrix, ids=idxC2, D=lapply(D[idxC2],function(x) c(x,x^2)),di=di, kinship=theta)
lik1[i] <- res1[[1]]
lik2[i] <- res2[[1]]
}
for(i in 1:length(R)){
#Create locus object for each marker
alleles <- as.character(allelesAll[[which(names(allelesAll)==markers[i])]])
afreq <- afreqAll[[which(names(afreqAll)==markers[i])]]
#Set MutationRate2 to a very small number to avoid probability 0 of mutation to and from microinvariants
#This is same as is done in Familias (MutationRate2 will be ignored unless mutation model is stepwise)
locus <- FamiliasLocus(frequencies=afreq,name=markers[i],
allelenames=alleles, MutationModel=mutModel, femaleMutationRate=r1,
maleMutationRate=r2, MutationRange=range1, MutationRate2 = 1e-06)
#If there is a silent allele we need to modify the mutation matrix.
#Silent allele must be given as 's' (not 'silent' as in Familias)
#That way Familias will treat it like a regular allele,
#while relMix will treat is specially
if('Silent'%in%alleles){
newAlleles <- c(alleles[-length(alleles)],'s')
mm <- locus$femaleMutationMatrix #Assuming same mutation matrix for male and female
colnames(mm) <- rownames(mm) <- newAlleles
locus <- FamiliasLocus(frequencies=afreq,name=markers[i],
allelenames= newAlleles, MutationModel='Custom', MutationMatrix=mm)
}
datamatrix <- createDatamatrix(locus,knownGenos[[which(names(knownGenos)==markers[i])]],idsU=idxU)
names(pedigrees) <- c("H1","H2")
if(identical(idxC1,idxC2)){
res <- relMix(pedigrees, locus, R=R[[i]], datamatrix, ids=idxC, D=lapply(D[idxC],function(x) c(x,x^2)),di=di, kinship=theta)
lik1[i] <- res$H1
lik2[i] <- res$H2
} else {
#relMix must be run twice with different contributors specified
#Since we assume that all individuals are represented in all pedigrees, we have the same datamatrix under both hypotheses
res1 <- relMix(pedigrees$H1, locus, R=R[[i]], datamatrix, ids=idxC1, D=lapply(D[idxC1],function(x) c(x,x^2)),di=di, kinship=theta)
res2 <- relMix(pedigrees$H2, locus, R=R[[i]], datamatrix, ids=idxC2, D=lapply(D[idxC2],function(x) c(x,x^2)),di=di, kinship=theta)
lik1[i] <- res1[[1]]
lik2[i] <- res2[[1]]
}
}
lik1
lik2
markers <- names(R)
LRmarker <- numeric(length(markers))
lik1 <- lik2 <- numeric(length(markers))
for(i in 1:length(R)){
#Create locus object for each marker
alleles <- as.character(allelesAll[[which(names(allelesAll)==markers[i])]])
afreq <- afreqAll[[which(names(afreqAll)==markers[i])]]
#Set MutationRate2 to a very small number to avoid probability 0 of mutation to and from microinvariants
#This is same as is done in Familias (MutationRate2 will be ignored unless mutation model is stepwise)
locus <- FamiliasLocus(frequencies=afreq,name=markers[i],
allelenames=alleles, MutationModel=mutModel, femaleMutationRate=r1,
maleMutationRate=r2, MutationRange=range1, MutationRate2 = 1e-06)
#If there is a silent allele we need to modify the mutation matrix.
#Silent allele must be given as 's' (not 'silent' as in Familias)
#That way Familias will treat it like a regular allele,
#while relMix will treat is specially
if('Silent'%in%alleles){
newAlleles <- c(alleles[-length(alleles)],'s')
mm <- locus$femaleMutationMatrix #Assuming same mutation matrix for male and female
colnames(mm) <- rownames(mm) <- newAlleles
locus <- FamiliasLocus(frequencies=afreq,name=markers[i],
allelenames= newAlleles, MutationModel='Custom', MutationMatrix=mm)
}
datamatrix <- createDatamatrix(locus,knownGenos[[which(names(knownGenos)==markers[i])]],idsU=idxU)
names(pedigrees) <- c("H1","H2")
if(identical(idxC1,idxC2)){
res <- relMix(pedigrees, locus, R=R[[i]], datamatrix, ids=idxC, D=lapply(D[idxC],function(x) c(x,x^2)),di=di, kinship=theta)
lik1[i] <- res$H1
lik2[i] <- res$H2
} else {
#relMix must be run twice with different contributors specified
#Since we assume that all individuals are represented in all pedigrees, we have the same datamatrix under both hypotheses
res1 <- relMix(pedigrees$H1, locus, R=R[[i]], datamatrix, ids=idxC1, D=lapply(D[idxC1],function(x) c(x,x^2)),di=di, kinship=theta)
res2 <- relMix(pedigrees$H2, locus, R=R[[i]], datamatrix, ids=idxC2, D=lapply(D[idxC2],function(x) c(x,x^2)),di=di, kinship=theta)
lik1[i] <- res1[[1]]
lik2[i] <- res2[[1]]
}
}
markers <- names(R)
LRmarker <- numeric(length(markers))
lik1 <- lik2 <- numeric(length(markers))
for(i in 1:length(R)){
print("Marker",i,"\n")
#Create locus object for each marker
alleles <- as.character(allelesAll[[which(names(allelesAll)==markers[i])]])
afreq <- afreqAll[[which(names(afreqAll)==markers[i])]]
#Set MutationRate2 to a very small number to avoid probability 0 of mutation to and from microinvariants
#This is same as is done in Familias (MutationRate2 will be ignored unless mutation model is stepwise)
locus <- FamiliasLocus(frequencies=afreq,name=markers[i],
allelenames=alleles, MutationModel=mutModel, femaleMutationRate=r1,
maleMutationRate=r2, MutationRange=range1, MutationRate2 = 1e-06)
#If there is a silent allele we need to modify the mutation matrix.
#Silent allele must be given as 's' (not 'silent' as in Familias)
#That way Familias will treat it like a regular allele,
#while relMix will treat is specially
if('Silent'%in%alleles){
newAlleles <- c(alleles[-length(alleles)],'s')
mm <- locus$femaleMutationMatrix #Assuming same mutation matrix for male and female
colnames(mm) <- rownames(mm) <- newAlleles
locus <- FamiliasLocus(frequencies=afreq,name=markers[i],
allelenames= newAlleles, MutationModel='Custom', MutationMatrix=mm)
}
datamatrix <- createDatamatrix(locus,knownGenos[[which(names(knownGenos)==markers[i])]],idsU=idxU)
names(pedigrees) <- c("H1","H2")
if(identical(idxC1,idxC2)){
res <- relMix(pedigrees, locus, R=R[[i]], datamatrix, ids=idxC, D=lapply(D[idxC],function(x) c(x,x^2)),di=di, kinship=theta)
lik1[i] <- res$H1
lik2[i] <- res$H2
} else {
#relMix must be run twice with different contributors specified
#Since we assume that all individuals are represented in all pedigrees, we have the same datamatrix under both hypotheses
res1 <- relMix(pedigrees$H1, locus, R=R[[i]], datamatrix, ids=idxC1, D=lapply(D[idxC1],function(x) c(x,x^2)),di=di, kinship=theta)
res2 <- relMix(pedigrees$H2, locus, R=R[[i]], datamatrix, ids=idxC2, D=lapply(D[idxC2],function(x) c(x,x^2)),di=di, kinship=theta)
lik1[i] <- res1[[1]]
lik2[i] <- res2[[1]]
}
}
print("Marker",i,"\n")
cat("Marker",i,"\n")
markers <- names(R)
LRmarker <- numeric(length(markers))
lik1 <- lik2 <- numeric(length(markers))
for(i in 1:length(R)){
cat("Marker",i,"\n")
#Create locus object for each marker
alleles <- as.character(allelesAll[[which(names(allelesAll)==markers[i])]])
afreq <- afreqAll[[which(names(afreqAll)==markers[i])]]
#Set MutationRate2 to a very small number to avoid probability 0 of mutation to and from microinvariants
#This is same as is done in Familias (MutationRate2 will be ignored unless mutation model is stepwise)
locus <- FamiliasLocus(frequencies=afreq,name=markers[i],
allelenames=alleles, MutationModel=mutModel, femaleMutationRate=r1,
maleMutationRate=r2, MutationRange=range1, MutationRate2 = 1e-06)
#If there is a silent allele we need to modify the mutation matrix.
#Silent allele must be given as 's' (not 'silent' as in Familias)
#That way Familias will treat it like a regular allele,
#while relMix will treat is specially
if('Silent'%in%alleles){
newAlleles <- c(alleles[-length(alleles)],'s')
mm <- locus$femaleMutationMatrix #Assuming same mutation matrix for male and female
colnames(mm) <- rownames(mm) <- newAlleles
locus <- FamiliasLocus(frequencies=afreq,name=markers[i],
allelenames= newAlleles, MutationModel='Custom', MutationMatrix=mm)
}
datamatrix <- createDatamatrix(locus,knownGenos[[which(names(knownGenos)==markers[i])]],idsU=idxU)
names(pedigrees) <- c("H1","H2")
if(identical(idxC1,idxC2)){
res <- relMix(pedigrees, locus, R=R[[i]], datamatrix, ids=idxC, D=lapply(D[idxC],function(x) c(x,x^2)),di=di, kinship=theta)
lik1[i] <- res$H1
lik2[i] <- res$H2
} else {
#relMix must be run twice with different contributors specified
#Since we assume that all individuals are represented in all pedigrees, we have the same datamatrix under both hypotheses
res1 <- relMix(pedigrees$H1, locus, R=R[[i]], datamatrix, ids=idxC1, D=lapply(D[idxC1],function(x) c(x,x^2)),di=di, kinship=theta)
res2 <- relMix(pedigrees$H2, locus, R=R[[i]], datamatrix, ids=idxC2, D=lapply(D[idxC2],function(x) c(x,x^2)),di=di, kinship=theta)
lik1[i] <- res1[[1]]
lik2[i] <- res2[[1]]
}
}
length(R
)
lik1
lik2
LRmarker <- lik1/lik2
#Set NaN's to 0 (likelihood 0 also under H2)
LRmarker[is.na(LRmarker)] <- 0
Data <- data.frame(Marker=markers,LR=LRmarker,LikH1=lik1,LikH2=lik2,stringsAsFactors=FALSE)
#Make result window
LRwindow <- gwindow("Results",height=800,width=800,visible=FALSE,horizontal=TRUE)
LRgroup1 <- ggroup(horizontal = TRUE, container=LRwindow)
paramGroup <- ggroup(horizontal=FALSE,container=LRgroup1)
#Database options
databaseData <- data.frame(Parameter=c("theta","Silent allele freq.","Min. allele freq."),Value=unlist(optPar))
databaseData[,1] <- as.character(databaseData[,1])
databaseData[,2] <- as.character(databaseData[,2])
databaseGroup <- ggroup(horizontal=FALSE,container=paramGroup)
databaseFrame <- gframe("Database",container=databaseGroup,horizontal=FALSE)
#dataTab <- gtable(databaseData,container=databaseFrame)
dataTab <- gtable(format(databaseData, justify = "centre"),container=databaseFrame)
size(dataTab) <- list(height=110,width=240,columnWidths=c(120,50))
#Mutations
if(mutModel=="Stepwise"){
mutData <- data.frame(Parameter=c("Model","Range"),Value=c(mutModel,mutPar$mutRange))
} else mutData <-  data.frame(Parameter="Model",Value=mutModel)
mutData2 <- data.frame(Parameter=c("Female mut. rate","Male mut. rate"),Value=c(mutPar$fMutRate,mutPar$mMutRate))
mutData[,1] <- as.character(mutData[,1])
mutData2[,1] <- as.character(mutData2[,1])
mutData[,2] <- as.character(mutData[,2])
mutData2[,2] <- as.character(mutData2[,2])
mutData <- rbind(mutData,mutData2)
mutGroup <- ggroup(horizontal=FALSE,container=paramGroup)
mutFrame <- gframe("Mutations",container=mutGroup,horizontal=FALSE)
#mutTab <- gtable(mutData,container=mutFrame)
mutTab <- gtable(format(mutData, justify = "centre"),container=mutFrame)
size(mutTab) <- list(height=110,width=240,columnWidths=c(120,50))
contGroup <- ggroup(horizontal=FALSE,container=paramGroup)
contFrame <- gframe("Contributors",container=contGroup,horizontal=FALSE)
if(length(idxC1)<length(idxC2)){
contData <- cbind("Pedigree 1"=idxC1[seq(idxC2)],"Pedigree 2"=idxC2)
} else{
contData <- cbind("Pedigree 1"=idxC1,"Pedigree 2"=idxC2[seq(idxC1)])
}
contData[is.na(contData)] <- ""
contTab <- gtable(format(as.data.frame(contData), justify = "centre"),container=contFrame)
size(contTab) <- list(height=90,width=240,columnWidths=c(85,85))
#Dropout/drop-in
dropData <- data.frame(Parameter=c(paste("Dropout",names(D)),"Drop-in"),Value=c(unlist(D),di))
dropData[,1] <- as.character(dropData[,1])
dropData[,2] <- as.character(dropData[,2])
colnames(dropData) <- c("Parameter","Value")
dropGroup <-  ggroup(horizontal=FALSE,container=paramGroup,spacing=7)
dropFrame <- gframe("Dropout and drop-in",container=dropGroup,horizontal=FALSE)
dropTab <- gtable(format(dropData,justify="centre"),container=dropFrame)
size(dropTab) <- list(height=110,width=240,columnWidths=c(120,50))
LRgroup2 <- ggroup(container=LRgroup1,horizontal=FALSE,spacing=7)
#Plot pedigrees
pedGroup <- ggroup(horizontal=TRUE,container=LRgroup2,spacing=5,expand=TRUE)
#pedFrame <- gframe("Pedigrees",container=pedGroup,horizontal=TRUE,expand=FALSE)
pedFrame1 <- gframe("Pedigree 1",container=pedGroup,horizontal=TRUE,expand=TRUE,fill=TRUE)
#size(pedFrame1) <- list(height=110,width=240)
#size <- (pedFrame1,height=110,width=240)
pedFrame2 <- gframe("Pedigree 2",container=pedGroup,horizontal=TRUE,expand=TRUE,fill=TRUE)
#size(pedFrame2) <- list(height=110,width=240)
if(all(ped1$findex==0 & ped1$mindex==0)) {
glabel("No relations",container=pedFrame1)
}else{
img1 <- tkrplot(getToolkitWidget(pedFrame1),
fun = function() {
#err <- try(plot(ped1),silent=TRUE)
plot(ped1,cex=0.8)},hscale=0.4,vscale=0.8)
add(pedGroup,img1)
}
if(all(ped2$findex==0 & ped2$mindex==0)) {
glabel("No relations",container=pedFrame2)
}else{
img2 <- tkrplot(getToolkitWidget(pedFrame2),
fun = function() {
#err <- try(plot(ped2),silent=TRUE)
plot(ped2,cex=0.8)},hscale=0.4,vscale=0.8)
add(pedGroup,img2)
}
#List of LRs
glabel(paste("Total LR:",format(prod(LRmarker),digits=4,scientific=TRUE)),container=LRgroup2)
tab <- gtable(format(Data[,1:2],digits=4,scientific=TRUE),container=LRgroup2)
#size(tab) <- list(width=200,columnWidths=c(10,50))
#Prepare data to write to file
allParam <- rbind(databaseData,mutData,dropData)
colnames(contData) <- paste("Contributors",colnames(contData))
allParam <- cbind(allParam," "=rep("",nrow(allParam)),rbind(contData,matrix("",nrow=nrow(allParam)-nrow(contData),ncol=ncol(contData))))
#exportData <- data.frame(c(allParam[,1],"","Marker",Data[,1],"Total"),c(allParam[,2],"","LR",Data[,2],prod(LRmarker)),
#                         c(rep("",nrow(allParam)+1),"Lik H1",Data[,3],prod(Data[,3])),c(rep("",nrow(allParam)+1),"Lik H2",Data[,4],prod(Data[,4])))
#Parameters and LR
#paramLR <- data.frame(c(allParam[,1],"","Marker",Data[,1],"Total"),c(allParam[,2],"","LR",Data[,2],prod(LRmarker)),
#                         c(rep("",nrow(allParam)+1),"Lik H1",Data[,3],prod(Data[,3])),c(rep("",nrow(allParam)+1),"Lik H2",Data[,4],prod(Data[,4])))
#Reference profiles
gtlist <- split(G[,3:4],G[,1])
GT <- do.call(cbind,gtlist)
#Mixture profile
mix <- E[-1]
colnames(mix) <- c("Marker",paste("Mix.",colnames(mix[,-1]),sep=""))
GT <- GT[rep(1:nrow(GT),length(unique(E$SampleName))),]
rownames(GT) <- rownames(E)
prof <- cbind(E,GT)
prof[is.na(prof)] <- ""
#LRgt <- cbind(rbind(Data,c("Total",prod(LRmarker),prod(Data[,3]),prod(Data[,4]))),rbind(prof[,-1],rep("",ncol(prof)-1)))
DataTot <- rbind(Data,c("Total",prod(LRmarker),prod(Data[,3]),prod(Data[,4])))
fill <- matrix("",nrow=nrow(DataTot),ncol=ncol(prof)-ncol(DataTot))
DataTot <- cbind(DataTot,fill)
colNames <- c(colnames(Data),rep(" ",ncol(fill)))
colNamesFill <- rbind(rep("",length(colNames)),colNames)
colnames(colNamesFill) <- colnames(DataTot)
DataTot <- rbind(colNamesFill,DataTot)
colnames(DataTot) <- colnames(prof)
LRgt <- rbind(prof,DataTot)
#LRgt <- rbind(rbind(Data,c("Total",prod(LRmarker),prod(Data[,3]),prod(Data[,4]))),rbind(prof[,-1],rep("",ncol(prof)-1))))
LRgt <- rbind(colnames(LRgt),LRgt)
fill <- matrix("",nrow=nrow(allParam),ncol=ncol(LRgt)-ncol(allParam))
allParam2 <- rbind(cbind(allParam,fill),rep("",ncol(LRgt)))
colnames(LRgt) <- colnames(allParam2)
exportData <- rbind(allParam2,LRgt)
exportData[is.na(exportData)] <- ""
rownames(exportData) <- NULL
colnames(exportData) <- c("Parameter","Value","",colnames(contData),rep("",ncol(exportData)-5))
LRbut <- gbutton("Save results to file", container=LRgroup2,handler=function(h,...){
f_export(exportData)
dispose(h$obj)
})
visible(LRwindow) <- TRUE
}
